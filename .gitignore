### JupyterNotebooks ###
# gitignore template for Jupyter Notebooks
# website: http://jupyter.org/

.ipynb_checkpoints
*/.ipynb_checkpoints/*

# IPython
profile_default/
ipython_config.py

# Remove previous ipynb_checkpoints
#   git rm -r .ipynb_checkpoints/

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
pytestdebug.log

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
doc/_build/

# PyBuilder
target/

# Jupyter Notebook

# IPython

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#poetry.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
# .env
.env/
.venv/
.vscode/
.idea/
notebooks/images*
env/
venv/
images/
ENV/
env.bak/
venv.bak/
pythonenv*

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# operating system-related files
# file properties cache/storage on macOS
*.DS_Store
# thumbnail cache on Windows
Thumbs.db

# profiling data
.prof

# tex files
*.tex


### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

# Other files
*.gif
*.pwf
*.lst
*.sav
*.plt
*.out
*.bak
*.bkp
*.stb
*.cdu
*.blt
*.dat
*.log
*.tex
*.REL
*.png
*.aux
*.pdf
*.gz
*.xlsx
*.html
*.BIN
*.bin
*.zip


sistemas/*.txt
sistemas/*.aux
sistemas/*.log
sistemas/*.pdf
sistemas/*.png
sistemas/*.gz
sistemas/*.HIS
sistemas/ULOG*

*resultados/Continuado/
*resultados/Smooth/
*resultados/iNFO/

*/107-Barras/*

*bruno.py
*balances.py
*stats.py
*sats.py
*test.py

*BALANCE.txt

sistemas/SAGE/
sistemas/SAGE/*
sistemas/EXLF/BALANCE/
sistemas/EXLF/BALANCE/*

!2b-milano.pwf
!2b-teste.pwf
!ieee14.pwf
!ieee24.pwf
!kundur.pwf
!neves.pwf
!ieee118.pwf
!107.pwf
!ieee57.pwf
!ieee300.pwf

*.dat
*.blt
*.cdu
*/BDADOS/*/*

*/OUTROS/*
*/2Areas
*/2Areas/*
*/AU14GenModel_SmallSignal_TimeResponse_Results_PacDyn_Anarede_files
*/AU14GenModel_SmallSignal_TimeResponse_Results_PacDyn_Anarede_files/*
*/Australian_Reduced_Model _14_generator_system_ANATEM_ANAREDE_files
*/Australian_Reduced_Model _14_generator_system_ANATEM_ANAREDE_files/*
*/Brazilian_7_bus_Equivalent_Model_PacDyn_Files
*/Brazilian_7_bus_Equivalent_Model_PacDyn_Files/*
*/EXIC/VSM/
*/EXIC/VSM/*
*/NETS_NYPS_(68_bus_system)_ANAREDE_PacDyn_ANATEM_files
*/NETS_NYPS_(68_bus_system)_ANAREDE_PacDyn_ANATEM_files/*
*/New_England_ANAREDE_PacDyn_ANATEM
*/New_England_ANAREDE_PacDyn_ANATEM/*
*/ThreeMIB_Benchmark_System_PacDyn_ANATEM_base_files
*/ThreeMIB_Benchmark_System_PacDyn_ANATEM_base_files/*
*/ThreeMIB_Benchmark_System_PacDyn_cases
*/ThreeMIB_Benchmark_System_PacDyn_cases/*

todo.txt
